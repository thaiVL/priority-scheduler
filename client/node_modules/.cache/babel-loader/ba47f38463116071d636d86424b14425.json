{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Thai\\\\Code\\\\CMPT370Project\\\\client\\\\src\\\\helpers\\\\protected-route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute(_ref) {\n  let {\n    user,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n\n      if (user) {\n        console.log(\"in protected there is a user: \" + user);\n        return /*#__PURE__*/React.cloneElement(children, {\n          user\n        });\n      } else {\n        console.log(\"in protected route: \" + user);\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: ROUTES.LOGIN,\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  user: PropTypes.object,\n  children: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["D:/Users/Thai/Code/CMPT370Project/client/src/helpers/protected-route.js"],"names":["React","PropTypes","Route","Redirect","ROUTES","ProtectedRoute","user","children","rest","location","console","log","cloneElement","pathname","LOGIN","state","from","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,eAAe,SAASC,cAAT,OAAqD;AAAA,MAA7B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkB,OAAGC;AAArB,GAA6B;AAElE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAE,SAAkB;AAAA,UAAjB;AAAEC,QAAAA;AAAF,OAAiB;;AACxB,UAAIH,IAAJ,EAAU;AACRI,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCL,IAA/C;AACA,4BAAON,KAAK,CAACY,YAAN,CAAmBL,QAAnB,EAA6B;AAAED,UAAAA;AAAF,SAA7B,CAAP;AACD,OAHD,MAKK;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBL,IAArC;AACA,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFO,YAAAA,QAAQ,EAAET,MAAM,CAACU,KADf;AAEFC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEP;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;AACF;AAnBH;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;KAzBuBJ,c;AA2BxBA,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB,MADS;AAEzBX,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AAFF,CAA3B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (user) {\r\n          console.log(\"in protected there is a user: \" + user);\r\n          return React.cloneElement(children, { user });\r\n        }\r\n\r\n        else {\r\n          console.log(\"in protected route: \" + user);\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: ROUTES.LOGIN,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  user: PropTypes.object,\r\n  children: PropTypes.object.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}